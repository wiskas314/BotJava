package org.example.controler;

import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;

import java.util.ArrayList;
import java.util.List;

/**
 * –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
 */
public class KeyboardFactory {
    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–≥—Ä—ã
     */
    public SendMessage createGameSelectionKeyboard(String chatId) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();
        List<InlineKeyboardButton> rowInline = new ArrayList<>();

        InlineKeyboardButton rideTheBusButton = new InlineKeyboardButton();
        rideTheBusButton.setText("Ride the Bus");
        rideTheBusButton.setCallbackData("ride_the_bus");

        InlineKeyboardButton blackJackButton = new InlineKeyboardButton();
        blackJackButton.setText("Black Jack");
        blackJackButton.setCallbackData("black_jack");

        rowInline.add(rideTheBusButton);
        rowInline.add(blackJackButton);
        rowsInline.add(rowInline);

        keyboard.setKeyboard(rowsInline);

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:");
        message.setReplyMarkup(keyboard);

        return message;
    }


    /**
     *–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ä–∞—É–Ω–¥–∞ –∏–≥—Ä—ã Ride the Bus - –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ –∫–∞—Ä—Ç—ã
     */
    public SendMessage KeyboardFirstRound(String chatId){
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rowsInline = new ArrayList<>();
        List<InlineKeyboardButton> rowInline = new ArrayList<>();
        InlineKeyboardButton Red = new InlineKeyboardButton();

        Red.setText("–ö—Ä–∞—Å–Ω—ã–π");
        Red.setCallbackData("red");

        InlineKeyboardButton Black = new InlineKeyboardButton();

        Black.setText("–ß–µ—Ä–Ω—ã–π");
        Black.setCallbackData("black");

        rowInline.add(Red);
        rowInline.add(Black);
        rowsInline.add(rowInline);
        keyboard.setKeyboard(rowsInline);

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("–†–∞—É–Ω–¥ 1 \n–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç:");
        message.setReplyMarkup(keyboard);

        return message;

    }

    /**
     *–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞—É–Ω–¥–∞ –≤—ã—à–µ/–Ω–∏–∂–µ –≤ –∏–≥—Ä–µ Ride the Bus
     */
    public SendMessage createHigherLowerKeyboard(String chatId) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        InlineKeyboardButton higherButton = new InlineKeyboardButton();
        higherButton.setText("üìà –í—ã—à–µ");
        higherButton.setCallbackData("higher");
        row1.add(higherButton);

        InlineKeyboardButton lowerButton = new InlineKeyboardButton();
        lowerButton.setText("üìâ –ù–∏–∂–µ");
        lowerButton.setCallbackData("lower");
        row1.add(lowerButton);

        rows.add(row1);
        keyboard.setKeyboard(rows);

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("–†–∞—É–Ω–¥ 2 \n–í—ã–±–µ—Ä–∏—Ç–µ –±—É–¥–µ—Ç –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–∞ —Å—Ç–∞—Ä—à–µ–π –∏–ª–∏ –º–ª–∞–¥—à–µ–π –º–∞—Å—Ç–∏:");
        message.setReplyMarkup(keyboard);

        return message;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞—É–Ω–¥–∞ –¥–∏–∞–ø–∞–∑–æ–Ω –≤ –∏–≥—Ä–µ Ride the Bus
     */
    public SendMessage createRangeKeyboard(String chatId) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        InlineKeyboardButton insideButton = new InlineKeyboardButton();
        insideButton.setText("üì• –í–Ω—É—Ç—Ä–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞");
        insideButton.setCallbackData("inside");
        row1.add(insideButton);


        InlineKeyboardButton outsideButton = new InlineKeyboardButton();
        outsideButton.setText("üì§ –í–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞");
        outsideButton.setCallbackData("outside");
        row1.add(outsideButton);

        rows.add(row1);
        keyboard.setKeyboard(rows);
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("–†–∞—É–Ω–¥ 3 \n–í—ã–±–µ—Ä–∏—Ç–µ –±—É–¥–µ—Ç –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–∞ –≤–Ω—É—Ç—Ä–∏ –∏–ª–∏ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞:");
        message.setReplyMarkup(keyboard);
        return message;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–∞—É–Ω–¥–∞ —É–≥–∞–¥–∞–π –º–∞—Å—Ç—å –≤ –∏–≥—Ä–µ Ride the Bus
     */
    public SendMessage createSuitGuessKeyboard(String chatId) {
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        // –ü–µ—Ä–≤—ã–π —Ä—è–¥ –º–∞—Å—Ç–µ–π
        List<InlineKeyboardButton> row1 = new ArrayList<>();
        InlineKeyboardButton heartsButton = new InlineKeyboardButton();
        heartsButton.setText("‚ô• –ß–µ—Ä–≤–∏");
        heartsButton.setCallbackData("hearts");
        row1.add(heartsButton);

        InlineKeyboardButton diamondsButton = new InlineKeyboardButton();
        diamondsButton.setText("‚ô¶ –ë—É–±–Ω—ã");
        diamondsButton.setCallbackData("diamonds");
        row1.add(diamondsButton);

        // –í—Ç–æ—Ä–æ–π —Ä—è–¥ –º–∞—Å—Ç–µ–π
        List<InlineKeyboardButton> row2 = new ArrayList<>();
        InlineKeyboardButton clubsButton = new InlineKeyboardButton();
        clubsButton.setText("‚ô£ –¢—Ä–µ—Ñ—ã");
        clubsButton.setCallbackData("clubs");
        row2.add(clubsButton);

        InlineKeyboardButton spadesButton = new InlineKeyboardButton();
        spadesButton.setText("‚ô† –ü–∏–∫–∏");
        spadesButton.setCallbackData("peaks");
        row2.add(spadesButton);

        rows.add(row1);
        rows.add(row2);
        keyboard.setKeyboard(rows);
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("–†–∞—É–Ω–¥ 4 \n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–æ–π –º–∞—Å—Ç–∏ –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–∞—è –∫–∞—Ä—Ç–∞:");
        message.setReplyMarkup(keyboard);
        return message;
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã BlackJack
     */
    public SendMessage createHitOrStandKeyboard(String chatId){
        InlineKeyboardMarkup keyboard = new InlineKeyboardMarkup();
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        List<InlineKeyboardButton> row1 = new ArrayList<>();
        InlineKeyboardButton hitButton = new InlineKeyboardButton();
        hitButton.setText("–í–∑—è—Ç—å –µ—â–µ");
        hitButton.setCallbackData("hit");
        row1.add(hitButton);

        InlineKeyboardButton standButton = new InlineKeyboardButton();
        standButton.setText("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è");
        standButton.setCallbackData("stand");
        row1.add(standButton);

        rows.add(row1);
        keyboard.setKeyboard(rows);

        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText("–í—ã–±–µ—Ä–∏—Ç–µ –±—É–¥–µ—Ç–µ –ª–∏ –≤—ã –µ—â–µ –¥–æ–±–∏—Ä–∞—Ç—å –∏–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ—Å—å:");
        message.setReplyMarkup(keyboard);

        return message;
    }
}
